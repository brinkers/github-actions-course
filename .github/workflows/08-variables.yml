name:  08 - using variables
run-name: "08 - Using variables"

on:
    push:
    workflow_dispatch:
        inputs:
            debug:
                type: boolean
                default: false


env:
    WORKFLOW_VAR: "I am a workflow env var"
    OVERWRITTEN: "I will be overwritten"
    UNDEFINED_VAR_WITH_DEFAULT:  ${{ vars.UNDEFINED_VAR || "default" }}

jobs:
    echo:
        env:
            JOB_VAR: "I am a job var"
            OVERWRITTEN: "I have been overwrittem at the job level"
        runs-on: ubuntu-latest
        steps:
            -   name: print env variables
                env:
                    STEP_VAR: "I am a step var"
                    step_var2: "I am another step var"
                run: |
                    echo "Step env var ${{ env.STEP_VAR }}"
                    echo "Step env var2: $step_var2"
                    echo "Job env var: ${{ env.JOB_VAR }}"
                    echo "Workflow env var:  ${{ env.WORKFLOW_VAR }}"
                    echo "Job Overwritten var:  ${{ env.OVERWRITTEN }}"
    echo2:
        runs-on: ubuntu-latest
        steps:
            -   name: print vars
                run: |
                    echo "Org Var ${{ vars.ORG_VAR }}"
                    echo "org overwritten var ${{ vars.OVERWRITTEN_VAR }}"
                    echo "repo var:  ${{ vars.REPOSITORY_VAR }}"
    echo-prod:
        runs-on: ubuntu-latest
        environment: prd
        steps:
            -   name: print prod variables
                run: |
                    echo "Org Var ${{ vars.ORG_VAR }}"
                    echo "org overwritten var ${{ vars.OVERWRITTEN_VAR }}"
                    echo "repo var:  ${{ vars.REPOSITORY_VAR }}"
                    echo "environment var: ${{ vars_TARGET_VAR }}
    echo-undefined:
        runs-on: ubuntu-latest
        environment: prd
        steps:
            -   name: print undefined  variables
                run: |
                    echo "Org Var ${{ env.UNDEFINED_VAR_WITH_DEFAULT }}"


